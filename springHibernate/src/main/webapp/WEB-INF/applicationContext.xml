<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd  
        http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd  
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
        http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="true">


	<!-- 扫描annotation类，过滤Service，Repository -->
	<context:component-scan base-package=" com.spring ">
		<context:include-filter type="annotation"
			expression=" org.springframework.stereotype.Service " />
		<context:include-filter type="annotation"
			expression=" org.springframework.stereotype.Repository " />
	</context:component-scan>

  <!-- spring启动时扫描项目路径下的properties文件,后续用${key }
    		方式取出对应值,这样可以代码解耦和，后续只需修改properties文件即可 -->
    <bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!-- dataSourse连接池相关属性，代码不在此贴出，会放在打包好的项目里面 -->
                <value>classpath:db.properties</value>
            </list>
        </property>
    </bean>
    
		<!-- 数据源配置, 使用DBCP数据库连接池 -->
		<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
			destroy-method="close">
			<!-- Connection Info -->
			<property name="driverClassName" value="${jdbc.driver}" />
			<property name="url" value="${jdbc.url}" />
			<property name="username" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />

			<!-- Connection Pooling Info -->
			<property name="maxActive" value="${dbcp.maxActive}" />
			<property name="maxIdle" value="${dbcp.maxIdle}" />
			<property name="defaultAutoCommit" value="false" />
			<!-- 连接Idle一个小时后超时 -->
			<property name="timeBetweenEvictionRunsMillis" value="3600000" />
			<property name="minEvictableIdleTimeMillis" value="3600000" />
		</bean>

	<bean id=" sessionFactory "
		class=" org.springframework.orm.hibernate4.annotation.AnnotationSessionFactoryBean ">
		<property name=" dataSource " ref=" dataSource " />
		<property name=" packagesToScan " value=" com.spring.model* "></property>
		<property name=" hibernateProperties ">
			<props>
				<prop key=" hibernate.dialect "> org.hibernate.dialect.MySQLDialect </prop>
				<prop key=" show_sql "> true </prop>
				<prop key=" hibernate.jdbc.batch_size ">
				</prop>
			</props>
		</property>
	</bean>

	<!-- 不破坏数据库,注册SessionFactory -->
	<bean id=" transactionManager "
		class=" org.springframework.orm.hibernate4.HibernateTransactionManager ">
		<property name=" sessionFactory " ref=" sessionFactory "></property>
	</bean>
	<bean id=" transactionInterceptor "
		class=" org.springframework.transaction.interceptor.TransactionInterceptor ">
		<property name=" transactionManager " ref=" transactionManager "></property>
		<property name=" transactionAttributes ">
			<props>
				<prop key=" save* "> PROPAGATION_REQUIRED </prop>
				<prop key=" update* "> PROPAGATION_REQUIRED </prop>
				<prop key=" delete* "> PROPAGATION_REQUIRED </prop>
				<prop key=" find* "> PROPAGATION_REQUIRED </prop>
				<prop key=" get* "> PROPAGATION_REQUIRED </prop>
				<prop key=" execute* "> PROPAGATION_REQUIRED </prop>
				<prop key=" load* "> PROPAGATION_REQUIRED </prop>
				<prop key=" merge* "> PROPAGATION_REQUIRED </prop>
				<prop key=" add* "> PROPAGATION_REQUIRED </prop>
			</props>
		</property>
	</bean>
	<bean
		class=" org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator ">
		<property name=" beanNames ">
			<list>
				<value>* Service </value>
			</list>
		</property>
		<property name=" interceptorNames ">
			<list>
				<value> transactionInterceptor </value>
			</list>
		</property>
	</bean>
</beans>
			